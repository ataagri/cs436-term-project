version: '3.8'

services:
  # PostgreSQL Database
  db:
    image: postgres:13
    container_name: contacts-db
    environment:
      POSTGRES_USER: contacts-user
      POSTGRES_PASSWORD: localpassword
      POSTGRES_DB: contacts
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U contacts-user -d contacts"]
      interval: 5s
      timeout: 5s
      retries: 5

  # FastAPI Backend
  backend:
    build: ./backend
    container_name: contacts-backend
    depends_on:
      db:
        condition: service_healthy
    environment:
      - DB_USER=contacts-user
      - DB_PASSWORD=localpassword
      - DB_NAME=contacts
      - DB_HOST=db
      - DB_PORT=5432
      - CLOUD_SQL_PROXY=false
    ports:
      - "8000:8000"
    volumes:
      - ./backend:/app
    command: >
      bash -c "python create_db.py && uvicorn main:app --host 0.0.0.0 --port 8000 --reload"

  # React Frontend
  frontend:
    build: 
      context: ./frontend
      dockerfile: Dockerfile.dev
    container_name: contacts-frontend
    depends_on:
      - backend
    environment:
      - REACT_APP_API_URL=http://localhost:8000
      - REACT_APP_USE_AUTH=false
    ports:
      - "3000:3000"
    volumes:
      - ./frontend:/app
      - /app/node_modules

  # Monitoring: Prometheus
  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus
    volumes:
      - ./prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--web.enable-lifecycle'
    ports:
      - "9090:9090"
    networks:
      - monitoring
    restart: unless-stopped

  # Monitoring: Grafana
  grafana:
    image: grafana/grafana:latest
    container_name: grafana
    volumes:
      - grafana_data:/var/lib/grafana
      - ./grafana/provisioning:/etc/grafana/provisioning
    environment:
      - GF_SECURITY_ADMIN_USER=admin
      - GF_SECURITY_ADMIN_PASSWORD=password
      - GF_USERS_ALLOW_SIGN_UP=false
    ports:
      - "3001:3000"  # Changed to 3001 to avoid conflict with frontend
    networks:
      - monitoring
    restart: unless-stopped

networks:
  default:
  monitoring:
    driver: bridge

volumes:
  postgres_data:
  prometheus_data:
  grafana_data:
